#实现快排，快排是不稳定算法，平均情况O（nlogn），最坏是O(n^2)
#快速排序
#指定第一个数为基准数a，设置两个指针分别指向第二个数和最末尾的数 如 3 51 2 18 6 7 1 15--》则初始基准数为3
#j指针向前移动直到找到第一个<a的数据，并和a交换 1 51 2 18 6 7 3 15
#i指针向后移动直到找到第一个>a的数据，并和a交换 1 3 2 16 6 7 51 15
#j继续向前移动直到i>j 1 2 3 16 6 7 51 15
#递归，此时基准值左边都比基准值小，基准值右边都比基准值大 quicksort(s,0,len(a)-1) quicksort(s,len(a)+1,len(s))

def quickSort(s,start,end):
    a=s[start]
    i=0 j=len(s)
    while i>j:
        if s[j]<=s[start]:
            s[start],s[j]=s[j],s[start]
            j--
        if s[i]>=s[start]:
            s[i],s[start]=s[start],s[i]
            i++
    quickSort(s,0,s[start]-1)
    quickSort(s,s[start]+1,end)
